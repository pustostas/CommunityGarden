@using System.Reflection;
@model CommunityGarden.Models.User

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @{
                string HtmlType(Type type)
                {
                    if (type == typeof(int) || type == typeof(int?))
                    {
                        return "number";
                    }

                    return "text";
                }

                Type modelType = Model.GetType();

                PropertyInfo[] properties = modelType.GetProperties(BindingFlags.Public | BindingFlags.Instance);

                foreach (PropertyInfo property in properties)
                {
                    if (property.Name == properties.First().Name)
                    {
                        <input type="hidden" data-val="true" data-val-required="The @property.Name field is required."
                            id="@property.Name" name="@property.Name" value="@property.GetValue(Model)">
                        continue;
                    }

                    <div class="form-group">
                        <label class="control-label" for="@property.Name">@property.Name</label>

                        @if (Nullable.GetUnderlyingType(property.PropertyType) == null) 
                        {
                            <input class="form-control valid" type="@HtmlType(property.PropertyType)" data-val="true" data-val-required="The @property.Name field is required."
                               id="@property.Name" name="@property.Name" value="@property.GetValue(Model)" aria-describedby="@property.Name-error" aria-invalid="false">
                            <span class="text-danger field-validation-valid" data-valmsg-for="@property.Name" data-valmsg-replace="true"></span>
                        }
                        else
                        {
                            <input class="form-control" type="@HtmlType(property.PropertyType)" id="@property.Name" name="@property.Name" value="@property.GetValue(Model)">
                        }
                    </div>
                }

                // I realy miss php now. I'm so sorry
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
